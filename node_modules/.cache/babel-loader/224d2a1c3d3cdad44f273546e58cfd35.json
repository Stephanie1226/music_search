{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/Desktop/music_search/src/components/collection-card/PopCardList.js\";\nimport React, { Component, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PopCard from './PopCard';\nimport './PopCardListStyles.scss';\n\nconst mapStateToProps = state => {\n  return {\n    p_keyword: state.pkeyword.p_keyword\n  };\n};\n\nclass PopCardList extends Component {\n  constructor() {\n    super();\n    this.state = {\n      popinfo: [],\n      pkw: \"\"\n    };\n  }\n\n  componentDidMount() {\n    {\n      console.log(this.props.p_keyword);\n    }\n    this.setState({\n      pkw: this.props.p_keyword\n    });\n    var p_kw = this.state.pkw.substring(1, this.state.pkw.length - 1);\n    fetch(`/contemporary-search?q=${p_kw}`).then(response => response.json()).then(data => {\n      this.setState({\n        popinfo: data\n      });\n    });\n  }\n\n  render() {\n    const {\n      popinfo\n    } = this.state.popinfo;\n    return React.createElement(\"div\", {\n      className: \"info-preview\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, popinfo && popinfo.map((artist, i) => {\n      return React.createElement(PopCard, {\n        key: i,\n        id: popinfo[i].id,\n        name: popinfo[i].artist,\n        song: popinfo[i].name,\n        album: popinfo[i].album,\n        date: popinfo[i].date,\n        yt_url: popinfo[i].youtube,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      });\n    }), console.log({\n      popinfo\n    }), console.log(\"this is pop card render\"));\n  }\n\n}\n\nexport default connect(mapStateToProps)(PopCardList); // version 2\n// function PopCardList (props) {\n// \tconst [popinfo, setPopinfo] = useState([]);\n// \tvar pkw = (JSON.stringify(props.p_keyword));\n// \tpkw = pkw.substring(1, pkw.length-1);\n// \tconsole.log(pkw)\n// \tconsole.log(\"this is pkw\")\n// \tconsole.log(`/contemporary-search?q=${pkw}`)\n//   useEffect(() => {\n//     fetch(`/contemporary-search?q=${pkw}`)\n//     \t.then(response => response.json())\n//     \t.then(data => {setPopinfo(data);});\n//   }, []);\n//   console.log({popinfo})\n// \treturn(\n// \t\t<div className='info-preview'>\n// \t\t\t{\n// \t\t\t\tpopinfo && popinfo.map((artist, i) => {\n// \t\t\t\t\treturn (\n// \t\t\t\t\t\t<PopCard \n// \t\t\t\t\t\tkey={i} \n// \t\t\t\t\t\tid={popinfo[i].id} \n// \t\t\t\t\t\tname={popinfo[i].artist} \n// \t\t\t\t\t\tsong={popinfo[i].name}\n// \t\t\t\t\t\talbum={popinfo[i].album}\n// \t\t\t\t\t\tdate={popinfo[i].date} \n// \t\t\t\t\t\tyt_url={popinfo[i].youtube}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t);\n// \t\t\t\t})\n// \t\t\t}\n// \t\t\t{console.log({popinfo})}\n// \t\t\t{console.log(\"this is pop card render\")}\n// \t   </div> \n// \t);\n// }\n// Version 1\n// const PopCardList = ({ popinfo }) => {\n// \treturn(\n// \t\t<div className='info-preview'>\n// \t\t\t{\n// \t\t\t\tpopinfo.map((artist, i) => {\n// \t\t\t\t\treturn (\n// \t\t\t\t\t\t<PopCard \n// \t\t\t\t\t\tkey={i} \n// \t\t\t\t\t\tid={popinfo[i].id} \n// \t\t\t\t\t\tname={popinfo[i].name} \n// \t\t\t\t\t\tsong={popinfo[i].song}\n// \t\t\t\t\t\talbum={popinfo[i].album}\n// \t\t\t\t\t\tdate={popinfo[i].date} \n// \t\t\t\t\t\tyt_url={popinfo[i].url}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t);\n// \t\t\t\t})\n// \t\t\t}\n// \t   </div> \n// \t);\n// }\n// export default PopCardList;","map":{"version":3,"sources":["/Users/Stephanie/Desktop/music_search/src/components/collection-card/PopCardList.js"],"names":["React","Component","useEffect","useState","connect","PopCard","mapStateToProps","state","p_keyword","pkeyword","PopCardList","constructor","popinfo","pkw","componentDidMount","console","log","props","setState","p_kw","substring","length","fetch","then","response","json","data","render","map","artist","i","id","name","album","date","youtube"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,SAA3B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAO,0BAAP;;AAEA,MAAMC,eAAe,GAAIC,KAAD,IAAW;AAClC,SAAO;AACNC,IAAAA,SAAS,EAAED,KAAK,CAACE,QAAN,CAAeD;AADpB,GAAP;AAGA,CAJD;;AAMA,MAAME,WAAN,SAA0BT,SAA1B,CAAoC;AACnCU,EAAAA,WAAW,GAAG;AACb;AACA,SAAKJ,KAAL,GAAa;AACZK,MAAAA,OAAO,EAAE,EADG;AAEZC,MAAAA,GAAG,EAAE;AAFO,KAAb;AAIA;;AAEDC,EAAAA,iBAAiB,GAAG;AACnB;AAACC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWT,SAAvB;AAAkC;AACnC,SAAKU,QAAL,CAAc;AAAEL,MAAAA,GAAG,EAAE,KAAKI,KAAL,CAAWT;AAAlB,KAAd;AACA,QAAIW,IAAI,GAAG,KAAKZ,KAAL,CAAWM,GAAX,CAAeO,SAAf,CAAyB,CAAzB,EAA4B,KAAKb,KAAL,CAAWM,GAAX,CAAeQ,MAAf,GAAsB,CAAlD,CAAX;AAEAC,IAAAA,KAAK,CAAE,0BAAyBH,IAAK,EAAhC,CAAL,CACII,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IAAI;AAAC,WAAKR,QAAL,CAAc;AAAEN,QAAAA,OAAO,EAAEc;AAAX,OAAd;AAAiC,KAFnD;AAGA;;AAEDC,EAAAA,MAAM,GAAG;AACR,UAAM;AAAEf,MAAAA;AAAF,QAAc,KAAKL,KAAL,CAAWK,OAA/B;AACA,WACC;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEEA,OAAO,IAAIA,OAAO,CAACgB,GAAR,CAAY,CAACC,MAAD,EAASC,CAAT,KAAe;AACrC,aACC,oBAAC,OAAD;AACA,QAAA,GAAG,EAAEA,CADL;AAEA,QAAA,EAAE,EAAElB,OAAO,CAACkB,CAAD,CAAP,CAAWC,EAFf;AAGA,QAAA,IAAI,EAAEnB,OAAO,CAACkB,CAAD,CAAP,CAAWD,MAHjB;AAIA,QAAA,IAAI,EAAEjB,OAAO,CAACkB,CAAD,CAAP,CAAWE,IAJjB;AAKA,QAAA,KAAK,EAAEpB,OAAO,CAACkB,CAAD,CAAP,CAAWG,KALlB;AAMA,QAAA,IAAI,EAAErB,OAAO,CAACkB,CAAD,CAAP,CAAWI,IANjB;AAOA,QAAA,MAAM,EAAEtB,OAAO,CAACkB,CAAD,CAAP,CAAWK,OAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAWA,KAZU,CAFb,EAgBEpB,OAAO,CAACC,GAAR,CAAY;AAACJ,MAAAA;AAAD,KAAZ,CAhBF,EAiBEG,OAAO,CAACC,GAAR,CAAY,yBAAZ,CAjBF,CADD;AAqBA;;AA1CkC;;AA+CpC,eAAeZ,OAAO,CAACE,eAAD,CAAP,CAAyBI,WAAzB,CAAf,C,CAOA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA","sourcesContent":["import React, { Component, useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport PopCard from './PopCard';\nimport './PopCardListStyles.scss';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tp_keyword: state.pkeyword.p_keyword\n\t}\n}\n\nclass PopCardList extends Component {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.state = {\n\t\t\tpopinfo: [],\n\t\t\tpkw: \"\"\n\t\t};\n\t}\n\n\tcomponentDidMount() {\n\t\t{console.log(this.props.p_keyword)}\n\t\tthis.setState({ pkw: this.props.p_keyword });\n\t\tvar p_kw = this.state.pkw.substring(1, this.state.pkw.length-1);\n\n\t\tfetch(`/contemporary-search?q=${p_kw}`)\n    \t.then(response => response.json())\n    \t.then(data => {this.setState({ popinfo: data })});\n\t}\n\n\trender() {\n\t\tconst { popinfo } = this.state.popinfo;\n\t\treturn(\n\t\t\t<div className='info-preview'>\n\t\t\t\t{\n\t\t\t\t\tpopinfo && popinfo.map((artist, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<PopCard \n\t\t\t\t\t\t\tkey={i} \n\t\t\t\t\t\t\tid={popinfo[i].id} \n\t\t\t\t\t\t\tname={popinfo[i].artist} \n\t\t\t\t\t\t\tsong={popinfo[i].name}\n\t\t\t\t\t\t\talbum={popinfo[i].album}\n\t\t\t\t\t\t\tdate={popinfo[i].date} \n\t\t\t\t\t\t\tyt_url={popinfo[i].youtube}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t);\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\t{console.log({popinfo})}\n\t\t\t\t{console.log(\"this is pop card render\")}\n\t\t   </div> \n\t\t);\n\t}\n}\n\n\n\nexport default connect(mapStateToProps)(PopCardList);\n\n\n\n\n\n\n// version 2\n// function PopCardList (props) {\n// \tconst [popinfo, setPopinfo] = useState([]);\n// \tvar pkw = (JSON.stringify(props.p_keyword));\n// \tpkw = pkw.substring(1, pkw.length-1);\n\n// \tconsole.log(pkw)\n// \tconsole.log(\"this is pkw\")\n// \tconsole.log(`/contemporary-search?q=${pkw}`)\n\n\n//   useEffect(() => {\n//     fetch(`/contemporary-search?q=${pkw}`)\n//     \t.then(response => response.json())\n//     \t.then(data => {setPopinfo(data);});\n//   }, []);\n\n//   console.log({popinfo})\n\n\n// \treturn(\n// \t\t<div className='info-preview'>\n// \t\t\t{\n// \t\t\t\tpopinfo && popinfo.map((artist, i) => {\n// \t\t\t\t\treturn (\n// \t\t\t\t\t\t<PopCard \n// \t\t\t\t\t\tkey={i} \n// \t\t\t\t\t\tid={popinfo[i].id} \n// \t\t\t\t\t\tname={popinfo[i].artist} \n// \t\t\t\t\t\tsong={popinfo[i].name}\n// \t\t\t\t\t\talbum={popinfo[i].album}\n// \t\t\t\t\t\tdate={popinfo[i].date} \n// \t\t\t\t\t\tyt_url={popinfo[i].youtube}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t);\n// \t\t\t\t})\n// \t\t\t}\n// \t\t\t{console.log({popinfo})}\n// \t\t\t{console.log(\"this is pop card render\")}\n// \t   </div> \n// \t);\n// }\n\n\n\n\n\n\n\n\n// Version 1\n// const PopCardList = ({ popinfo }) => {\n// \treturn(\n// \t\t<div className='info-preview'>\n// \t\t\t{\n// \t\t\t\tpopinfo.map((artist, i) => {\n// \t\t\t\t\treturn (\n// \t\t\t\t\t\t<PopCard \n// \t\t\t\t\t\tkey={i} \n// \t\t\t\t\t\tid={popinfo[i].id} \n// \t\t\t\t\t\tname={popinfo[i].name} \n// \t\t\t\t\t\tsong={popinfo[i].song}\n// \t\t\t\t\t\talbum={popinfo[i].album}\n// \t\t\t\t\t\tdate={popinfo[i].date} \n// \t\t\t\t\t\tyt_url={popinfo[i].url}\n// \t\t\t\t\t\t/>\n// \t\t\t\t\t);\n// \t\t\t\t})\n// \t\t\t}\n// \t   </div> \n// \t);\n// }\n\n// export default PopCardList;"]},"metadata":{},"sourceType":"module"}