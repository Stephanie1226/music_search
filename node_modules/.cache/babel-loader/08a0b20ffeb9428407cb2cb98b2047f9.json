{"ast":null,"code":"import React, { useState } from 'react';\nimport { connect } from 'react-redux'; // const mapStateToProps = (state) => ({\n//   songInfo: state.pcardInfo.pcard_info\n// });\n\nfunction PrelatedInfo(ckeckedInfo, songInfo) {\n  const albumRelated = {};\n  const artisteRelated = {};\n  const genreRelated = {};\n  const eraRelated = {};\n  const associateRelated = {};\n\n  if (ckeckedInfo.same_album) {\n    // console.log(songInfo.album)\n    // console.log(`/samealbum/${songInfo.album}`)\n    fetch(`/samealbum/${songInfo.album}`).then(response => response.json()).then(data => {\n      const albumRelated = JSON.parse(JSON.stringify(data));\n      console.log(artisteRelated);\n    });\n  }\n\n  ;\n\n  if (ckeckedInfo.this_artiste) {\n    // console.log(songInfo.artist)\n    // console.log(`/sameartist/${songInfo.artist}`)\n    fetch(`/sameartist/${songInfo.artist}`).then(response => response.json()).then(data => {\n      const artisteRelated = JSON.parse(JSON.stringify(data));\n      console.log(artisteRelated);\n    });\n  }\n\n  ;\n\n  if (ckeckedInfo.genre) {\n    // console.log(songInfo.genre)\n    // console.log(`/samegenre/${songInfo.genre}`)\n    fetch(`/samegenre/${songInfo.genre}`).then(response => response.json()).then(data => {\n      const genreRelated = JSON.parse(JSON.stringify(data));\n      console.log(genreRelated);\n    });\n  }\n\n  ;\n\n  if (ckeckedInfo.era) {\n    // console.log(songInfo.date)\n    // console.log(`/sameera/${songInfo.date}`)\n    fetch(`/sameera/${songInfo.date}`).then(response => response.json()).then(data => {\n      const eraRelated = JSON.parse(JSON.stringify(data));\n      console.log(eraRelated);\n    });\n  }\n\n  ;\n\n  if (ckeckedInfo.associate_artisie) {\n    fetch(`/associates/${songInfo.artist}/${songInfo.genre}`).then(response => response.json()).then(data => {\n      const associateRelated = JSON.parse(JSON.stringify(data));\n      console.log(associateRelated);\n    });\n  }\n\n  ;\n} // export default connect(mapStateToProps)(pRelatedInfo);\n\n\nexport default PrelatedInfo;","map":{"version":3,"sources":["/Users/Stephanie/Desktop/music_search/src/pages/pop-search-page/PrelatedInfo.js"],"names":["React","useState","connect","PrelatedInfo","ckeckedInfo","songInfo","albumRelated","artisteRelated","genreRelated","eraRelated","associateRelated","same_album","fetch","album","then","response","json","data","JSON","parse","stringify","console","log","this_artiste","artist","genre","era","date","associate_artisie"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;AACA;;AAEA,SAASC,YAAT,CAAsBC,WAAtB,EAAmCC,QAAnC,EAA6C;AAC5C,QAAMC,YAAY,GAAG,EAArB;AACA,QAAMC,cAAc,GAAG,EAAvB;AACA,QAAMC,YAAY,GAAG,EAArB;AACA,QAAMC,UAAU,GAAG,EAAnB;AACA,QAAMC,gBAAgB,GAAG,EAAzB;;AAEA,MAAIN,WAAW,CAACO,UAAhB,EAA4B;AAC3B;AACA;AACAC,IAAAA,KAAK,CAAE,cAAaP,QAAQ,CAACQ,KAAM,EAA9B,CAAL,CACIC,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMX,YAAY,GAAGY,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAArB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYf,cAAZ;AACA,KANL;AAQA;;AAAA;;AAED,MAAIH,WAAW,CAACmB,YAAhB,EAA8B;AAC7B;AACA;AACAX,IAAAA,KAAK,CAAE,eAAcP,QAAQ,CAACmB,MAAO,EAAhC,CAAL,CACIV,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMV,cAAc,GAAGW,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAAvB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYf,cAAZ;AACA,KANL;AAQA;;AAAA;;AAED,MAAIH,WAAW,CAACqB,KAAhB,EAAuB;AACtB;AACA;AACAb,IAAAA,KAAK,CAAE,cAAaP,QAAQ,CAACoB,KAAM,EAA9B,CAAL,CACIX,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMT,YAAY,GAAGU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAArB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYd,YAAZ;AACA,KANL;AAQA;;AAAA;;AAED,MAAIJ,WAAW,CAACsB,GAAhB,EAAqB;AACpB;AACA;AACAd,IAAAA,KAAK,CAAE,YAAWP,QAAQ,CAACsB,IAAK,EAA3B,CAAL,CACIb,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMR,UAAU,GAAGS,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAAnB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYb,UAAZ;AACA,KANL;AAQA;;AAAA;;AAED,MAAIL,WAAW,CAACwB,iBAAhB,EAAmC;AAClChB,IAAAA,KAAK,CAAE,eAAcP,QAAQ,CAACmB,MAAO,IAAGnB,QAAQ,CAACoB,KAAM,EAAlD,CAAL,CACIX,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMP,gBAAgB,GAAGQ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAAzB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYZ,gBAAZ;AACA,KANL;AAQA;;AAAA;AACD,C,CAED;;;AACA,eAAeP,YAAf","sourcesContent":["import React, { useState }  from 'react';\nimport { connect } from 'react-redux';\n\n// const mapStateToProps = (state) => ({\n//   songInfo: state.pcardInfo.pcard_info\n// });\n\nfunction PrelatedInfo(ckeckedInfo, songInfo) {\n\tconst albumRelated = {};\n\tconst artisteRelated = {};\n\tconst genreRelated = {};\n\tconst eraRelated = {};\n\tconst associateRelated = {};\n\n\tif (ckeckedInfo.same_album) {\n\t\t// console.log(songInfo.album)\n\t\t// console.log(`/samealbum/${songInfo.album}`)\n\t\tfetch(`/samealbum/${songInfo.album}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst albumRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(artisteRelated);\n    \t\t}\n    \t);\n\t};\n\n\tif (ckeckedInfo.this_artiste) {\n\t\t// console.log(songInfo.artist)\n\t\t// console.log(`/sameartist/${songInfo.artist}`)\n\t\tfetch(`/sameartist/${songInfo.artist}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst artisteRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(artisteRelated);\n    \t\t}\n    \t);\n\t};\n\n\tif (ckeckedInfo.genre) {\n\t\t// console.log(songInfo.genre)\n\t\t// console.log(`/samegenre/${songInfo.genre}`)\n\t\tfetch(`/samegenre/${songInfo.genre}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst genreRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(genreRelated);\n    \t\t}\n    \t);\n\t};\n\n\tif (ckeckedInfo.era) {\n\t\t// console.log(songInfo.date)\n\t\t// console.log(`/sameera/${songInfo.date}`)\n\t\tfetch(`/sameera/${songInfo.date}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst eraRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(eraRelated);\n    \t\t}\n    \t);\n\t};\n\n\tif (ckeckedInfo.associate_artisie) {\n\t\tfetch(`/associates/${songInfo.artist}/${songInfo.genre}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst associateRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(associateRelated);\n    \t\t}\n    \t);\n\t};\n}\n\n// export default connect(mapStateToProps)(pRelatedInfo);\nexport default PrelatedInfo;\n\n"]},"metadata":{},"sourceType":"module"}