{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/Desktop/music_search/src/components/collection-card/PRelatedCardList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PopCard from './PopCard';\nimport './PopCardListStyles.scss';\n\nconst mapStateToProps = state => {\n  return {\n    pCheckStatus: state.pcheckboxes.pCheckStatus,\n    songInfo: state.pcardInfo.pcard_info\n  };\n};\n\nfunction PRelatedCardList(props) {\n  const [albumRelated, setAlbumR] = useState([]);\n  const [artisteRelated, setArtisteR] = useState([]);\n  const [genreRelated, setGenreR] = useState([]);\n  const [eraRelated, setEraR] = useState([]);\n  const [associateRelated, setAssociateR] = useState([]);\n  useEffect(() => {\n    console.log(\"use effect check status\");\n    console.log(props.pCheckStatus);\n\n    if (props.pCheckStatus.same_album) {\n      console.log(\"check one is running\");\n      console.log(props.pCheckStatus.same_album);\n      fetch(`/samealbum/${props.songInfo.album}`).then(response => response.json()).then(data => {\n        setAlbumR(data);\n      }); // console.log(albumRelated);\n      // console.log(\"this is album\")\n    } else {\n      setAlbumR([]);\n    }\n\n    ;\n\n    if (props.pCheckStatus.this_artiste) {\n      fetch(`/sameartist/${props.songInfo.artist}`).then(response => response.json()).then(data => {\n        setArtisteR(data);\n      });\n      console.log(artisteRelated);\n    } else {\n      setArtisteR([]);\n    }\n\n    ;\n\n    if (props.pCheckStatus.genre) {\n      fetch(`/samegenre/${props.songInfo.genre}`).then(response => response.json()).then(data => {\n        setGenreR(data);\n      });\n      console.log(genreRelated);\n    } else {\n      setGenreR([]);\n    }\n\n    ;\n\n    if (props.pCheckStatus.era) {\n      fetch(`/sameera/${props.songInfo.date}`).then(response => response.json()).then(data => {\n        setEraR(data);\n      });\n      console.log(eraRelated);\n    } else {\n      setEraR([]);\n    }\n\n    ;\n\n    if (props.pCheckStatus.associate_artisie) {\n      fetch(`/associates/${props.songInfo.artist}/${props.songInfo.genre}`).then(response => response.json()).then(data => {\n        setAssociateR(data);\n      });\n      console.log(associateRelated);\n    } else {\n      setAssociateR([]);\n    }\n\n    ;\n    console.log(\"this is use effect\");\n  }, [props.pCheckStatus]);\n  const combined = albumRelated.concat(artisteRelated, genreRelated, eraRelated, associateRelated);\n  const set = new Set();\n  const result = combined.filter(item => set.has(JSON.stringify(item)) ? true : (set.add(JSON.stringify(item)), false));\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81\n    },\n    __self: this\n  }, \" TEST! \"), console.log(result), console.log(\"this is TEST return\"));\n}\n\nexport default connect(mapStateToProps)(PRelatedCardList);","map":{"version":3,"sources":["/Users/Stephanie/Desktop/music_search/src/components/collection-card/PRelatedCardList.js"],"names":["React","useEffect","useState","connect","PopCard","mapStateToProps","state","pCheckStatus","pcheckboxes","songInfo","pcardInfo","pcard_info","PRelatedCardList","props","albumRelated","setAlbumR","artisteRelated","setArtisteR","genreRelated","setGenreR","eraRelated","setEraR","associateRelated","setAssociateR","console","log","same_album","fetch","album","then","response","json","data","this_artiste","artist","genre","era","date","associate_artisie","combined","concat","set","Set","result","filter","item","has","JSON","stringify","add"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport PopCard from './PopCard';\nimport './PopCardListStyles.scss';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tpCheckStatus: state.pcheckboxes.pCheckStatus,\n\t\tsongInfo: state.pcardInfo.pcard_info\n\t}\n}\n\nfunction PRelatedCardList (props) {\n\tconst [albumRelated, setAlbumR] = useState([]);\n\tconst [artisteRelated, setArtisteR] = useState([]);\n\tconst [genreRelated, setGenreR] = useState([]);\n\tconst [eraRelated, setEraR] = useState([]);\n\tconst [associateRelated, setAssociateR] = useState([]);\n\n  useEffect(() => {\n  \tconsole.log(\"use effect check status\")\n  \tconsole.log(props.pCheckStatus);\n\n\t  if (props.pCheckStatus.same_album) {\n\t  \tconsole.log(\"check one is running\")\n\t  \tconsole.log(props.pCheckStatus.same_album)\n\t\t\tfetch(`/samealbum/${props.songInfo.album}`)\n\t    \t.then(response => response.json())\n\t    \t.then(data => {setAlbumR(data)});\n\t \t\t// console.log(albumRelated);\n\t \t\t// console.log(\"this is album\")\n\t\t} else {\n\t\t\tsetAlbumR([]);\n\t\t};\n\n\t\tif (props.pCheckStatus.this_artiste) {\n\t\t\tfetch(`/sameartist/${props.songInfo.artist}`)\n\t    \t.then(response => response.json())\n\t    \t.then(data => {setArtisteR(data)});\n\t    console.log(artisteRelated);\n\t\t} else {\n\t\t\tsetArtisteR([]);\n\t\t};\n\n\t\tif (props.pCheckStatus.genre) {\n\t\t\tfetch(`/samegenre/${props.songInfo.genre}`)\n\t    \t.then(response => response.json())\n\t    \t.then(data => {setGenreR(data)});\n\t    console.log(genreRelated);\n\t\t} else {\n\t\t\tsetGenreR([]);\n\t\t};\n\n\t\tif (props.pCheckStatus.era) {\n\t\t\tfetch(`/sameera/${props.songInfo.date}`)\n\t    \t.then(response => response.json())\n\t    \t.then(data => {setEraR(data)});\n\t    console.log(eraRelated);\n\t\t} else {\n\t\t\tsetEraR([]);\n\t\t};\n\n\t\tif (props.pCheckStatus.associate_artisie) {\n\t\t\tfetch(`/associates/${props.songInfo.artist}/${props.songInfo.genre}`)\n\t    \t.then(response => response.json())\n\t    \t.then(data => {setAssociateR(data)});\n\t    console.log(associateRelated);\n\t\t} else {\n\t\t\tsetAssociateR([]);\n\t\t};\n\t\tconsole.log(\"this is use effect\")\n  }, [props.pCheckStatus]);\n\n  const combined = albumRelated.concat(artisteRelated, genreRelated, eraRelated, associateRelated);\n  const set = new Set();\n\tconst result = combined.filter(item => set.has(JSON.stringify(item)) ? true : (set.add(JSON.stringify(item)), false));\n\n\treturn(\n\t\t<div>\n\t\t\t<h1> TEST! </h1>\n\t\t\t{console.log(result)}\n\t\t\t{console.log(\"this is TEST return\")}\n\t\t</div>\n\t);\n}\n\n\nexport default connect(mapStateToProps)(PRelatedCardList);"]},"metadata":{},"sourceType":"module"}