{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/Desktop/music_search/src/components/collection-card/PopCard.js\";\nimport React from 'react';\nimport './PopCardStyles.scss';\nimport { withRouter } from 'react-router-dom';\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { change_pcardinfo } from '../../redux/pcardInfo-action';\nimport { p_checkboxes_changed } from '../../redux/pcheckboxes-action';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    change_pcardinfo: info => dispatch(change_pcardinfo(info)),\n    p_checkboxes_changed: status => dispatch(p_checkboxes_changed(status))\n  };\n};\n\nconst PopCard = ({\n  id,\n  artist,\n  name,\n  album,\n  date,\n  genre,\n  yt_url,\n  history,\n  match,\n  change_pcardinfo,\n  p_checkboxes_changed\n}) => {\n  const linkUrl = 'pop_search_yt';\n\n  const handleClick = (artist, name, album, date, genre, yt_url) => {\n    const thisCard = {\n      artist: artist,\n      name: name,\n      album: album,\n      date: date,\n      genre: genre,\n      youtube: yt_url\n    };\n    const reset_pstatus = {\n      same_album: false,\n      this_artiste: false,\n      genre: false,\n      era: false,\n      associate_artisie: false\n    };\n    change_pcardinfo(thisCard);\n    p_checkboxes_changed(reset_pstatus);\n    history.push(\"/pop_search_yt\");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"dib br4 pa3 ma2 grow bw2 shadow-5 card-display\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(\"h2\", {\n    className: \"song-font\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, name), React.createElement(\"h3\", {\n    className: \"singer-font\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"by \", artist), React.createElement(\"h4\", {\n    className: \"album-font\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Album/Single: \", album), React.createElement(\"p\", {\n    className: \"realease-date\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Realease date: \", date), React.createElement(\"button\", {\n    className: \"p-btn p-btn-one p-box-container\",\n    onClick: () => handleClick(artist, name, album, date, genre, yt_url),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"HIT THIS SONG\"));\n};\n\nexport default compose(withRouter, connect(null, mapDispatchToProps))(PopCard);","map":{"version":3,"sources":["/Users/Stephanie/Desktop/music_search/src/components/collection-card/PopCard.js"],"names":["React","withRouter","compose","connect","change_pcardinfo","p_checkboxes_changed","mapDispatchToProps","dispatch","info","status","PopCard","id","artist","name","album","date","genre","yt_url","history","match","linkUrl","handleClick","thisCard","youtube","reset_pstatus","same_album","this_artiste","era","associate_artisie","push"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AAEA,SAASC,OAAT,QAAwB,OAAxB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,gBAAT,QAAiC,8BAAjC;AACA,SAASC,oBAAT,QAAqC,gCAArC;;AAEA,MAAMC,kBAAkB,GAAGC,QAAQ,IAAI;AACtC,SAAO;AACNH,IAAAA,gBAAgB,EAAGI,IAAD,IAAUD,QAAQ,CAACH,gBAAgB,CAACI,IAAD,CAAjB,CAD9B;AAENH,IAAAA,oBAAoB,EAAGI,MAAD,IAAYF,QAAQ,CAACF,oBAAoB,CAACI,MAAD,CAArB;AAFpC,GAAP;AAIA,CALD;;AAOA,MAAMC,OAAO,GAAG,CAAC;AAACC,EAAAA,EAAD;AAAKC,EAAAA,MAAL;AAAaC,EAAAA,IAAb;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,IAA1B;AAAgCC,EAAAA,KAAhC;AAAuCC,EAAAA,MAAvC;AAA+CC,EAAAA,OAA/C;AAAwDC,EAAAA,KAAxD;AAA+Df,EAAAA,gBAA/D;AAAiFC,EAAAA;AAAjF,CAAD,KAA4G;AAC3H,QAAMe,OAAO,GAAG,eAAhB;;AACC,QAAMC,WAAW,GAAG,CAACT,MAAD,EAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,MAAnC,KAA8C;AACjE,UAAMK,QAAQ,GAAG;AAChBV,MAAAA,MAAM,EAAEA,MADQ;AAEhBC,MAAAA,IAAI,EAAEA,IAFU;AAGhBC,MAAAA,KAAK,EAAEA,KAHS;AAIhBC,MAAAA,IAAI,EAAEA,IAJU;AAKhBC,MAAAA,KAAK,EAAEA,KALS;AAMhBO,MAAAA,OAAO,EAAEN;AANO,KAAjB;AAQD,UAAMO,aAAa,GAAG;AACrBC,MAAAA,UAAU,EAAE,KADS;AAErBC,MAAAA,YAAY,EAAE,KAFO;AAGrBV,MAAAA,KAAK,EAAE,KAHc;AAIrBW,MAAAA,GAAG,EAAE,KAJgB;AAKrBC,MAAAA,iBAAiB,EAAE;AALE,KAAtB;AAOExB,IAAAA,gBAAgB,CAACkB,QAAD,CAAhB;AACAjB,IAAAA,oBAAoB,CAACmB,aAAD,CAApB;AACAN,IAAAA,OAAO,CAACW,IAAR,CAAa,gBAAb;AACD,GAnBD;;AAqBD,SACC;AAAK,IAAA,SAAS,EAAC,gDAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAI,IAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BhB,IAA3B,CADD,EAEC;AAAI,IAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAgCD,MAAhC,CAFD,EAGC;AAAI,IAAA,SAAS,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAA0CE,KAA1C,CAHD,EAIC;AAAG,IAAA,SAAS,EAAC,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAA6CC,IAA7C,CAJD,EAKC;AACC,IAAA,SAAS,EAAC,iCADX;AAEC,IAAA,OAAO,EAAE,MACRM,WAAW,CAACT,MAAD,EAASC,IAAT,EAAeC,KAAf,EAAsBC,IAAtB,EAA4BC,KAA5B,EAAmCC,MAAnC,CAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBALD,CADD;AAeA,CAtCD;;AAyCA,eAAef,OAAO,CACpBD,UADoB,EAEpBE,OAAO,CAAC,IAAD,EAAOG,kBAAP,CAFa,CAAP,CAGbI,OAHa,CAAf","sourcesContent":["import React from 'react';\nimport './PopCardStyles.scss';\nimport {withRouter} from 'react-router-dom';\n\nimport { compose } from 'redux';\nimport { connect } from 'react-redux';\nimport { change_pcardinfo } from '../../redux/pcardInfo-action';\nimport { p_checkboxes_changed } from '../../redux/pcheckboxes-action';\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tchange_pcardinfo: (info) => dispatch(change_pcardinfo(info)),\n\t\tp_checkboxes_changed: (status) => dispatch(p_checkboxes_changed(status)),\n\t};\n}\n\nconst PopCard = ({id, artist, name, album, date, genre, yt_url, history, match, change_pcardinfo, p_checkboxes_changed}) => {\n\tconst linkUrl = 'pop_search_yt';\n  const handleClick = (artist, name, album, date, genre, yt_url) => {\n  \tconst thisCard = {\n\t\t  artist: artist,\n\t\t  name: name,\n\t\t  album: album,\n\t\t  date: date,\n\t\t  genre: genre,\n\t\t  youtube: yt_url\n\t\t};\n\t\tconst reset_pstatus = {\n\t\t\tsame_album: false,\n\t\t\tthis_artiste: false,\n\t\t\tgenre: false,\n\t\t\tera: false,\n\t\t\tassociate_artisie: false\n\t\t};\n    change_pcardinfo(thisCard);\n    p_checkboxes_changed(reset_pstatus);\n    history.push(\"/pop_search_yt\");\n  }\n\n\treturn(\n\t\t<div className='dib br4 pa3 ma2 grow bw2 shadow-5 card-display'>\n\t\t\t<h2 className='song-font'>{name}</h2>\n\t\t\t<h3 className='singer-font'>by {artist}</h3>\n\t\t\t<h4 className='album-font'>Album/Single: {album}</h4>\n\t\t\t<p className='realease-date'>Realease date: {date}</p>\n\t\t\t<button \n\t\t\t\tclassName=\"p-btn p-btn-one p-box-container\"\n\t\t\t\tonClick={() =>\n\t\t\t\t\thandleClick(artist, name, album, date, genre, yt_url)}\n\t\t\t>\n\t\t\t\tHIT THIS SONG\n\t\t\t</button>\n\t\t</div>\n\t)\n}\n\n\nexport default compose(\n  withRouter,\n  connect(null, mapDispatchToProps)\n)(PopCard);\n\n"]},"metadata":{},"sourceType":"module"}