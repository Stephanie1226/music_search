{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/Desktop/music_search/src/components/check-box/PopCheckboxes.js\";\nimport React, { Component } from 'react';\nimport './PopCheckboxesStyles.scss';\nimport { connect } from 'react-redux';\nimport { p_checkboxes_changed } from '../../redux/pcheckboxes-action';\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    p_checkboxes_changed: status => dispatch(p_checkboxes_changed(status))\n  };\n};\n\nclass PopCkeckBoxes extends Component {\n  constructor() {\n    super();\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n  }\n\n  handleCheckboxChange() {\n    const pstatus = {\n      same_album: this.refs.album_check.checked,\n      this_artiste: this.refs.artiste_check.checked,\n      genre: this.refs.genre_check.checked,\n      era: this.refs.era_check.checked,\n      associate_artisie: this.refs.associate_check.checked\n    };\n    this.props.p_checkboxes_changed(pstatus);\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"pop_checkbox_container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      id: \"album_checkbox\",\n      ref: \"album_check\",\n      type: \"checkbox\",\n      className: \"pop_checkboxes\",\n      onChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"album_checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, \"Same Album\"), React.createElement(\"input\", {\n      id: \"artiste_checkbox\",\n      ref: \"artiste_check\",\n      type: \"checkbox\",\n      className: \"pop_checkboxes\",\n      onChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"artiste_checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, \"This Artiste\"), React.createElement(\"input\", {\n      id: \"genre_checkbox\",\n      ref: \"genre_check\",\n      type: \"checkbox\",\n      className: \"pop_checkboxes\",\n      onChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"genre_checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41\n      },\n      __self: this\n    }, \"Genre\"), React.createElement(\"input\", {\n      id: \"era_checkbox\",\n      ref: \"era_check\",\n      type: \"checkbox\",\n      className: \"pop_checkboxes\",\n      onChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"era_checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44\n      },\n      __self: this\n    }, \"Year/Era\"), React.createElement(\"input\", {\n      id: \"associate_checkbox\",\n      ref: \"associate_check\",\n      type: \"checkbox\",\n      className: \"pop_checkboxes\",\n      onChange: this.handleCheckboxChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }), React.createElement(\"label\", {\n      htmlFor: \"associate_checkbox\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47\n      },\n      __self: this\n    }, \"Associate Artiste\"));\n  }\n\n}\n\nexport default connect(null, mapDispatchToProps)(PopCkeckBoxes);","map":{"version":3,"sources":["/Users/Stephanie/Desktop/music_search/src/components/check-box/PopCheckboxes.js"],"names":["React","Component","connect","p_checkboxes_changed","mapDispatchToProps","dispatch","status","PopCkeckBoxes","constructor","handleCheckboxChange","bind","pstatus","same_album","refs","album_check","checked","this_artiste","artiste_check","genre","genre_check","era","era_check","associate_artisie","associate_check","props","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport './PopCheckboxesStyles.scss';\n\nimport { connect } from 'react-redux';\nimport { p_checkboxes_changed } from '../../redux/pcheckboxes-action';\n\n\nconst mapDispatchToProps = dispatch => {\n\treturn {\n\t\tp_checkboxes_changed: (status) => dispatch(p_checkboxes_changed(status))\n\t}\n}\n\nclass PopCkeckBoxes extends Component {\n\tconstructor() {\n\t\tsuper();\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n\t}\n\n\thandleCheckboxChange() {\n\t\tconst pstatus = {\n\t\t\tsame_album: this.refs.album_check.checked,\n\t\t\tthis_artiste: this.refs.artiste_check.checked,\n\t\t\tgenre: this.refs.genre_check.checked,\n\t\t\tera: this.refs.era_check.checked,\n\t\t\tassociate_artisie: this.refs.associate_check.checked\n\t\t};\n\t\tthis.props.p_checkboxes_changed(pstatus);\n\t}\n\n\trender() {\n\t\treturn(\n\t\t\t<div className=\"pop_checkbox_container\">\n\t\t  \t<input id=\"album_checkbox\" ref=\"album_check\" type=\"checkbox\" className='pop_checkboxes' onChange={this.handleCheckboxChange} />\n\t\t  \t<label htmlFor=\"album_checkbox\">Same Album</label>\n\n\t\t  \t<input id=\"artiste_checkbox\" ref=\"artiste_check\" type=\"checkbox\" className='pop_checkboxes' onChange={this.handleCheckboxChange} />\n\t\t  \t<label htmlFor=\"artiste_checkbox\">This Artiste</label>\n\n\t\t\t  <input id=\"genre_checkbox\" ref=\"genre_check\" type=\"checkbox\" className='pop_checkboxes' onChange={this.handleCheckboxChange} />\n\t\t\t  <label htmlFor=\"genre_checkbox\">Genre</label>\n\n\t\t\t  <input id=\"era_checkbox\" ref=\"era_check\" type=\"checkbox\" className='pop_checkboxes' onChange={this.handleCheckboxChange} />\n\t\t\t  <label htmlFor=\"era_checkbox\">Year/Era</label>\n\n\t\t\t  <input id=\"associate_checkbox\" ref=\"associate_check\" type=\"checkbox\" className='pop_checkboxes' onChange={this.handleCheckboxChange} />\n\t\t\t  <label htmlFor=\"associate_checkbox\">Associate Artiste</label>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\n\nexport default connect(null, mapDispatchToProps)(PopCkeckBoxes);\n\n\n"]},"metadata":{},"sourceType":"module"}