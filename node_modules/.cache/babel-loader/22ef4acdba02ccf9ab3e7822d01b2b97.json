{"ast":null,"code":"import React, { useState } from 'react';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = state => ({\n  songInfo: state.pcardInfo.pcard_info\n});\n\nlet albumRelated = {};\n\nfunction RelatedInfo(ckeckedInfo, songInfo) {\n  if (ckeckedInfo.same_album) {\n    // console.log(songInfo.album)\n    // console.log(`/samealbum/${songInfo.album}`)\n    fetch(`/samealbum/${songInfo.album}`).then(response => response.json()).then(data => {\n      let albumRelated = JSON.parse(JSON.stringify(data));\n      console.log(albumRelated);\n    });\n  } else {\n    let albumRelated = {};\n  }\n\n  ;\n\n  if (ckeckedInfo.this_artiste) {\n    // console.log(songInfo.artist)\n    // console.log(`/sameartist/${songInfo.artist}`)\n    fetch(`/sameartist/${songInfo.artist}`).then(response => response.json()).then(data => {\n      let artisteRelated = JSON.parse(JSON.stringify(data));\n      console.log(artisteRelated);\n    });\n  } else {\n    let artisteRelated = {};\n  }\n\n  if (ckeckedInfo.genre) {\n    // console.log(songInfo.genre)\n    // console.log(`/samegenre/${songInfo.genre}`)\n    fetch(`/samegenre/${songInfo.genre}`).then(response => response.json()).then(data => {\n      const genreRelated = JSON.parse(JSON.stringify(data));\n      console.log(genreRelated);\n    });\n  } else {\n    const genreRelated = {};\n  }\n\n  if (ckeckedInfo.era) {\n    // console.log(songInfo.date)\n    // console.log(`/sameera/${songInfo.date}`)\n    fetch(`/sameera/${songInfo.date}`).then(response => response.json()).then(data => {\n      const eraRelated = JSON.parse(JSON.stringify(data));\n      console.log(eraRelated);\n    });\n  } else {\n    const eraRelated = {};\n  }\n\n  if (ckeckedInfo.associate_artisie) {\n    fetch(`/associates/${songInfo.artist}/${songInfo.genre}`).then(response => response.json()).then(data => {\n      const associateRelated = JSON.parse(JSON.stringify(data));\n      console.log(associateRelated);\n    });\n  } else {\n    const associateRelated = {};\n  }\n\n  const obj = Object.assign({}, {\n    albumRelated\n  }, {\n    artisteRelated\n  }, {\n    eraRelated\n  });\n} // export default connect(mapStateToProps)(pRelatedInfo);\n\n\nexport default RelatedInfo;","map":{"version":3,"sources":["/Users/Stephanie/Desktop/music_search/src/pages/pop-search-page/RelatedInfo.js"],"names":["React","useState","connect","mapStateToProps","state","songInfo","pcardInfo","pcard_info","albumRelated","RelatedInfo","ckeckedInfo","same_album","fetch","album","then","response","json","data","JSON","parse","stringify","console","log","this_artiste","artist","artisteRelated","genre","genreRelated","era","date","eraRelated","associate_artisie","associateRelated","obj","Object","assign"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCC,EAAAA,QAAQ,EAAED,KAAK,CAACE,SAAN,CAAgBC;AADQ,CAAZ,CAAxB;;AAIA,IAAIC,YAAY,GAAG,EAAnB;;AAEA,SAASC,WAAT,CAAqBC,WAArB,EAAkCL,QAAlC,EAA4C;AAC3C,MAAIK,WAAW,CAACC,UAAhB,EAA4B;AAC3B;AACA;AACAC,IAAAA,KAAK,CAAE,cAAaP,QAAQ,CAACQ,KAAM,EAA9B,CAAL,CACIC,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,UAAIT,YAAY,GAAGU,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAAnB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYd,YAAZ;AACA,KANL;AAQA,GAXD,MAYQ;AACD,QAAIA,YAAY,GAAG,EAAnB;AACH;;AAAA;;AAEJ,MAAIE,WAAW,CAACa,YAAhB,EAA8B;AAC7B;AACA;AACAX,IAAAA,KAAK,CAAE,eAAcP,QAAQ,CAACmB,MAAO,EAAhC,CAAL,CACIV,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,UAAIQ,cAAc,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAArB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYG,cAAZ;AACA,KANL;AAQA,GAXD,MAWO;AACA,QAAIA,cAAc,GAAG,EAArB;AACH;;AAEJ,MAAIf,WAAW,CAACgB,KAAhB,EAAuB;AACtB;AACA;AACAd,IAAAA,KAAK,CAAE,cAAaP,QAAQ,CAACqB,KAAM,EAA9B,CAAL,CACIZ,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMU,YAAY,GAAGT,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAArB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACA,KANL;AAQA,GAXD,MAWO;AACA,UAAMA,YAAY,GAAG,EAArB;AACH;;AAEJ,MAAIjB,WAAW,CAACkB,GAAhB,EAAqB;AACpB;AACA;AACAhB,IAAAA,KAAK,CAAE,YAAWP,QAAQ,CAACwB,IAAK,EAA3B,CAAL,CACIf,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMa,UAAU,GAAGZ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAAnB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAZ;AACA,KANL;AAQA,GAXD,MAWO;AACA,UAAMA,UAAU,GAAG,EAAnB;AACH;;AAEJ,MAAIpB,WAAW,CAACqB,iBAAhB,EAAmC;AAClCnB,IAAAA,KAAK,CAAE,eAAcP,QAAQ,CAACmB,MAAO,IAAGnB,QAAQ,CAACqB,KAAM,EAAlD,CAAL,CACIZ,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMe,gBAAgB,GAAGd,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeH,IAAf,CAAX,CAAzB;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAYU,gBAAZ;AACA,KANL;AAQA,GATD,MASO;AACA,UAAMA,gBAAgB,GAAG,EAAzB;AACH;;AAED,QAAMC,GAAG,GAAGC,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkB;AAAC3B,IAAAA;AAAD,GAAlB,EAAkC;AAACiB,IAAAA;AAAD,GAAlC,EAAoD;AAACK,IAAAA;AAAD,GAApD,CAAZ;AACH,C,CAED;;;AACA,eAAerB,WAAf","sourcesContent":["import React, { useState }  from 'react';\nimport { connect } from 'react-redux';\n\nconst mapStateToProps = (state) => ({\n  songInfo: state.pcardInfo.pcard_info\n});\n\nlet albumRelated = {};\n\nfunction RelatedInfo(ckeckedInfo, songInfo) {\n\tif (ckeckedInfo.same_album) {\n\t\t// console.log(songInfo.album)\n\t\t// console.log(`/samealbum/${songInfo.album}`)\n\t\tfetch(`/samealbum/${songInfo.album}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tlet albumRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(albumRelated);\n    \t\t}\n    \t);\n\t} \n    else {\n        let albumRelated = {};\n    };\n\n\tif (ckeckedInfo.this_artiste) {\n\t\t// console.log(songInfo.artist)\n\t\t// console.log(`/sameartist/${songInfo.artist}`)\n\t\tfetch(`/sameartist/${songInfo.artist}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tlet artisteRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(artisteRelated);\n    \t\t}\n    \t);\n\t} else {\n        let artisteRelated = {};\n    }\n\n\tif (ckeckedInfo.genre) {\n\t\t// console.log(songInfo.genre)\n\t\t// console.log(`/samegenre/${songInfo.genre}`)\n\t\tfetch(`/samegenre/${songInfo.genre}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst genreRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(genreRelated);\n    \t\t}\n    \t);\n\t} else {\n        const genreRelated = {};\n    }\n\n\tif (ckeckedInfo.era) {\n\t\t// console.log(songInfo.date)\n\t\t// console.log(`/sameera/${songInfo.date}`)\n\t\tfetch(`/sameera/${songInfo.date}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst eraRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(eraRelated);\n    \t\t}\n    \t);\n\t} else {\n        const eraRelated = {};\n    }\n\n\tif (ckeckedInfo.associate_artisie) {\n\t\tfetch(`/associates/${songInfo.artist}/${songInfo.genre}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst associateRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(associateRelated);\n    \t\t}\n    \t);\n\t} else {\n        const associateRelated = {};\n    }\n\n    const obj = Object.assign({}, {albumRelated}, {artisteRelated}, {eraRelated})\n}\n\n// export default connect(mapStateToProps)(pRelatedInfo);\nexport default RelatedInfo;\n\n"]},"metadata":{},"sourceType":"module"}