{"ast":null,"code":"import React, { useState } from 'react';\nimport { connect } from 'react-redux'; // const mapStateToProps = (state) => ({\n//   songInfo: state.pcardInfo.pcard_info\n// });\n\nfunction PrelatedInfo(ckeckedInfo, songInfo) {\n  if (ckeckedInfo.same_album) {\n    // console.log(songInfo.album)\n    // console.log(`/samealbum/${songInfo.album}`)\n    fetch(`/samealbum/${songInfo.album}`).then(response => response.json()).then(data => {\n      const albumRelated = JSON.parse(JSON.stringify(data));\n      console.log(albumRelated);\n    });\n  }\n\n  ;\n\n  if (ckeckedInfo.this_artiste) {\n    // console.log(songInfo.artist)\n    // console.log(`/sameartist/${songInfo.artist}`)\n    fetch(`/sameartist/${songInfo.artist}`).then(response => response.json()).then(data => {\n      const artisteRelated = JSON.parse(JSON.stringify(data));\n      console.log(artisteRelated);\n    });\n  }\n\n  ;\n\n  if (ckeckedInfo.genre) {\n    // console.log(songInfo.genre)\n    // console.log(`/samegenre/${songInfo.genre}`)\n    fetch(`/samegenre/${songInfo.genre}`).then(response => response.json()).then(data => {\n      const genreRelated = JSON.parse(JSON.stringify(data));\n      console.log(genreRelated);\n    });\n  }\n\n  ;\n\n  if (ckeckedInfo.era) {\n    // console.log(songInfo.date)\n    // console.log(`/sameera/${songInfo.date}`)\n    fetch(`/sameera/${songInfo.date}`).then(response => response.json()).then(data => {\n      const eraRelated = JSON.parse(JSON.stringify(data));\n      console.log(eraRelated);\n    });\n  }\n\n  ;\n\n  if (ckeckedInfo.associate_artisie) {\n    fetch(`/associates/${songInfo.artist}/${songInfo.genre}`).then(response => response.json()).then(data => {\n      const associateRelated = JSON.parse(JSON.stringify(data));\n      console.log(associateRelated);\n    });\n  }\n\n  ;\n} // export default connect(mapStateToProps)(pRelatedInfo);\n\n\nexport default PrelatedInfo;","map":{"version":3,"sources":["/Users/Stephanie/Desktop/music_search/src/pages/pop-search-page/PrelatedInfo.js"],"names":["React","useState","connect","PrelatedInfo","ckeckedInfo","songInfo","same_album","fetch","album","then","response","json","data","albumRelated","JSON","parse","stringify","console","log","this_artiste","artist","artisteRelated","genre","genreRelated","era","date","eraRelated","associate_artisie","associateRelated"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB,C,CAEA;AACA;AACA;;AAEA,SAASC,YAAT,CAAsBC,WAAtB,EAAmCC,QAAnC,EAA6C;AAE5C,MAAID,WAAW,CAACE,UAAhB,EAA4B;AAC3B;AACA;AACAC,IAAAA,KAAK,CAAE,cAAaF,QAAQ,CAACG,KAAM,EAA9B,CAAL,CACIC,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMC,YAAY,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAArB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYL,YAAZ;AACA,KANL;AAQA;;AAAA;;AAED,MAAIT,WAAW,CAACe,YAAhB,EAA8B;AAC7B;AACA;AACAZ,IAAAA,KAAK,CAAE,eAAcF,QAAQ,CAACe,MAAO,EAAhC,CAAL,CACIX,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMS,cAAc,GAAGP,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAAvB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYG,cAAZ;AACA,KANL;AAQA;;AAAA;;AAED,MAAIjB,WAAW,CAACkB,KAAhB,EAAuB;AACtB;AACA;AACAf,IAAAA,KAAK,CAAE,cAAaF,QAAQ,CAACiB,KAAM,EAA9B,CAAL,CACIb,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMW,YAAY,GAAGT,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAArB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYK,YAAZ;AACA,KANL;AAQA;;AAAA;;AAED,MAAInB,WAAW,CAACoB,GAAhB,EAAqB;AACpB;AACA;AACAjB,IAAAA,KAAK,CAAE,YAAWF,QAAQ,CAACoB,IAAK,EAA3B,CAAL,CACIhB,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMc,UAAU,GAAGZ,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAAnB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYQ,UAAZ;AACA,KANL;AAQA;;AAAA;;AAED,MAAItB,WAAW,CAACuB,iBAAhB,EAAmC;AAClCpB,IAAAA,KAAK,CAAE,eAAcF,QAAQ,CAACe,MAAO,IAAGf,QAAQ,CAACiB,KAAM,EAAlD,CAAL,CACIb,IADJ,CACSC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADrB,EAEIF,IAFJ,CAESG,IAAI,IACT;AACC,YAAMgB,gBAAgB,GAAGd,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAAzB;AACAK,MAAAA,OAAO,CAACC,GAAR,CAAYU,gBAAZ;AACA,KANL;AAQA;;AAAA;AACD,C,CAED;;;AACA,eAAezB,YAAf","sourcesContent":["import React, { useState }  from 'react';\nimport { connect } from 'react-redux';\n\n// const mapStateToProps = (state) => ({\n//   songInfo: state.pcardInfo.pcard_info\n// });\n\nfunction PrelatedInfo(ckeckedInfo, songInfo) {\n\n\tif (ckeckedInfo.same_album) {\n\t\t// console.log(songInfo.album)\n\t\t// console.log(`/samealbum/${songInfo.album}`)\n\t\tfetch(`/samealbum/${songInfo.album}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst albumRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(albumRelated);\n    \t\t}\n    \t);\n\t};\n\n\tif (ckeckedInfo.this_artiste) {\n\t\t// console.log(songInfo.artist)\n\t\t// console.log(`/sameartist/${songInfo.artist}`)\n\t\tfetch(`/sameartist/${songInfo.artist}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst artisteRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(artisteRelated);\n    \t\t}\n    \t);\n\t};\n\n\tif (ckeckedInfo.genre) {\n\t\t// console.log(songInfo.genre)\n\t\t// console.log(`/samegenre/${songInfo.genre}`)\n\t\tfetch(`/samegenre/${songInfo.genre}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst genreRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(genreRelated);\n    \t\t}\n    \t);\n\t};\n\n\tif (ckeckedInfo.era) {\n\t\t// console.log(songInfo.date)\n\t\t// console.log(`/sameera/${songInfo.date}`)\n\t\tfetch(`/sameera/${songInfo.date}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst eraRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(eraRelated);\n    \t\t}\n    \t);\n\t};\n\n\tif (ckeckedInfo.associate_artisie) {\n\t\tfetch(`/associates/${songInfo.artist}/${songInfo.genre}`)\n    \t.then(response => response.json())\n    \t.then(data => \n    \t\t{\n    \t\t\tconst associateRelated = JSON.parse(JSON.stringify(data));\n    \t\t\tconsole.log(associateRelated);\n    \t\t}\n    \t);\n\t};\n}\n\n// export default connect(mapStateToProps)(pRelatedInfo);\nexport default PrelatedInfo;\n\n"]},"metadata":{},"sourceType":"module"}