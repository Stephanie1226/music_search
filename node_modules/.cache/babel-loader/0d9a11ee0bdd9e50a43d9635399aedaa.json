{"ast":null,"code":"var _jsxFileName = \"/Users/Stephanie/Desktop/music_search/src/components/collection-card/PRelatedCardList.js\";\nimport React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\nimport PopCard from './PopCard';\nimport './PopCardListStyles.scss';\n\nconst mapStateToProps = state => {\n  return {\n    pCheckStatus: state.pcheckboxes.pCheckStatus,\n    songInfo: state.pcardInfo.pcard_info\n  };\n};\n\nfunction PRelatedCardList(props) {\n  const [albumRelated, setAlbumR] = useState([]);\n  const [artisteRelated, setArtisteR] = useState([]);\n  const [genreRelated, setGenreR] = useState([]);\n  const [eraRelated, setEraR] = useState([]);\n  const [associateRelated, setAssociateR] = useState([]);\n  useEffect(() => {\n    if (ckeckedInfo.same_album) {\n      console.log(`/samealbum/${props.songInfo.album}`);\n      fetch(`/samealbum/${props.songInfo.album}`).then(response => response.json()).then(data => {\n        setAlbumR(data);\n      });\n      console.log(albumRelated);\n    }\n\n    if (ckeckedInfo.this_artiste) {\n      fetch(`/sameartist/${props.songInfo.artist}`).then(response => response.json()).then(data => {\n        setArtisteR(data);\n      });\n      console.log(albumRelated);\n    }\n\n    if (ckeckedInfo.genre) {\n      fetch(`/samegenre/${props.songInfo.genre}`).then(response => response.json()).then(data => {\n        setGenreR(data);\n      });\n      console.log(genreRelated);\n    }\n\n    if (ckeckedInfo.era) {\n      fetch(`/sameera/${props.songInfo.date}`).then(response => response.json()).then(data => {\n        setEraR(data);\n      });\n      console.log(eraRelated);\n    }\n\n    if (ckeckedInfo.associate_artisie) {\n      fetch(`/associates/${props.songInfo.artist}/${props.songInfo.genre}`).then(response => response.json()).then(data => {\n        setAssociateR(data);\n      });\n      console.log(associateRelated);\n    }\n  }, [props.pCheckStatus]);\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, \" TEST! \"));\n}\n\nexport default connect(mapStateToProps)(PRelatedCardList);","map":{"version":3,"sources":["/Users/Stephanie/Desktop/music_search/src/components/collection-card/PRelatedCardList.js"],"names":["React","useEffect","useState","connect","PopCard","mapStateToProps","state","pCheckStatus","pcheckboxes","songInfo","pcardInfo","pcard_info","PRelatedCardList","props","albumRelated","setAlbumR","artisteRelated","setArtisteR","genreRelated","setGenreR","eraRelated","setEraR","associateRelated","setAssociateR","ckeckedInfo","same_album","console","log","album","fetch","then","response","json","data","this_artiste","artist","genre","era","date","associate_artisie"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport PopCard from './PopCard';\nimport './PopCardListStyles.scss';\n\nconst mapStateToProps = (state) => {\n\treturn {\n\t\tpCheckStatus: state.pcheckboxes.pCheckStatus,\n\t\tsongInfo: state.pcardInfo.pcard_info\n\t}\n}\n\nfunction PRelatedCardList (props) {\n\tconst [albumRelated, setAlbumR] = useState([]);\n\tconst [artisteRelated, setArtisteR] = useState([]);\n\tconst [genreRelated, setGenreR] = useState([]);\n\tconst [eraRelated, setEraR] = useState([]);\n\tconst [associateRelated, setAssociateR] = useState([]);\n\n  useEffect(() => {\n\t  if (ckeckedInfo.same_album) {\n\t  \tconsole.log(`/samealbum/${props.songInfo.album}`);\n\t\t\tfetch(`/samealbum/${props.songInfo.album}`)\n\t    \t.then(response => response.json())\n\t    \t.then(data => {setAlbumR(data)});\n\t \t\tconsole.log(albumRelated);\n\t\t} \n\n\t\tif (ckeckedInfo.this_artiste) {\n\t\t\tfetch(`/sameartist/${props.songInfo.artist}`)\n\t    \t.then(response => response.json())\n\t    \t.then(data => {setArtisteR(data)});\n\t    console.log(albumRelated);\n\t\t} \n\n\t\tif (ckeckedInfo.genre) {\n\t\t\tfetch(`/samegenre/${props.songInfo.genre}`)\n\t    \t.then(response => response.json())\n\t    \t.then(data => {setGenreR(data)});\n\t    console.log(genreRelated);\n\t\t} \n\n\t\tif (ckeckedInfo.era) {\n\t\t\tfetch(`/sameera/${props.songInfo.date}`)\n\t    \t.then(response => response.json())\n\t    \t.then(data => {setEraR(data)});\n\t    console.log(eraRelated);\n\t\t} \n\n\t\tif (ckeckedInfo.associate_artisie) {\n\t\t\tfetch(`/associates/${props.songInfo.artist}/${props.songInfo.genre}`)\n\t    \t.then(response => response.json())\n\t    \t.then(data => {setAssociateR(data)});\n\t    console.log(associateRelated);\n\t\t} \n  }, [props.pCheckStatus]);\n\n\treturn(\n\t\t<div>\n\t\t\t<h1> TEST! </h1>\n\t\t</div>\n\t);\n}\n\n\nexport default connect(mapStateToProps)(PRelatedCardList);"]},"metadata":{},"sourceType":"module"}